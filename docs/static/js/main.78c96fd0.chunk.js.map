{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","console","log","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,mCACA,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,KAElBO,QAAQC,IAAI,iBAKZ,SACQ,uBACIC,KAAK,OACLC,MAAQX,EACRY,SApBU,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,e,+BCRlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGCI,MAAMF,GAHP,cAGZG,EAHY,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EAEzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAeXM,GAfW,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAKA,QCHJO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAGrB,ECJwB,SAAEA,GAE1B,MAA0BhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OATEC,qBAAU,WACRxB,EAASC,GACRwB,MAAK,SAAAC,GAEFH,EAAS,CAAEf,KAAMkB,EAAML,SAAS,SAGpC,CAAEpB,IAECqB,EDb0BK,CAAa1B,GAAjCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAI,SAAEC,GACT,OAAO,cAAC,EAAD,eAEWA,GADDA,EAAIC,aEkB9BgB,EA9BM,WAEjB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KASA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACD,6BAEQ6C,EAAWnB,KAAK,SAACT,GACb,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCnB5C6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.78c96fd0.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( { setCategories } ) => {\n    \n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => { \n        setInputValue(e.target.value);\n    };\n    \n    const handleSubmit = (e)=>{\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2){\n            setCategories( cats => [inputValue, ...cats ] );\n            setInputValue('');\n        }\n        console.log('Submit hecho');\n    }\n    \n    return (\n        <>\n        <form onSubmit={ handleSubmit  }>\n                <input \n                    type=\"text\"\n                    value={ inputValue }\n                    onChange={ handleInputChange } \n                />\n\n        </form>\n       \n        </>\n    )\n}\n\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async ( category )=>{\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=eN0kGvJ27mPCydxFlgjrKJ1D7saz3Br5`;\n     const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map( img =>{\n\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        };\n        \n    });\n\n     return gifs;\n};","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n    // console.log({ id, title, url });\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n\n    const { data:images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n        <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n        { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n        <div className=\"card-grid\">\n                {\n                    images.map(( img )=>{\n                        return <GifGridItem \n                                    key={img.id}\n                                     { ...img } />;\n                    })\n                }\n                \n        </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n      // //useEffect se ejecunta el renderizado una sola vez\n      useEffect(()=>{\n        getGifs( category )\n        .then(imgs=>{\n                \n            setState({ data: imgs, loading: false});\n\n                });\n      },[ category ]);\n\n    return state;\n  \n}\n","\nimport React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One punch']);\n\n\n    // const handleAdd = ()=>{\n    //     // setCategories( ['HonterXHonter', ...categories ] );\n    //     setCategories( cats => ['HonterXHonter', ...cats ] );\n    // }\n\n    // map() crea un peque√±o ciclo por cada elemento del array\n    return (\n        <>\n            <h1>GifExpertApp</h1>\n            <AddCategory setCategories={ setCategories } />\n            <hr/>\n           <ol>\n               {\n                   categories.map( (category) =>{\n                       return <GifGrid key={category} category={category} />;\n                   } )\n               }\n           </ol>\n        </>\n    );\n        \n} \n\n\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}